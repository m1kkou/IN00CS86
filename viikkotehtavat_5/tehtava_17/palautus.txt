TEHTÄVÄNANTO:
Kloonaa esimerkkilinkin Github-repo omalle koneellesi

git clone https://github.com/mdobydullah/nodejs-crud-with-expressjs-mysql

Tee ohjeiden perusteella books-tietokanta ja Express-sovellus, joka sisältää kaikki CRUD-operaatiot. Github-linkin koodin pitäisi toimia sellaisenaan kunhan noudatat ohjeita HUOLELLISESTI!

Lähetä vastauksena linkki omaan Github-repoosi.

PALAUTUS:

Tehtävä tehty Raspberry PI4:llä (Raspbian), tietokanta mysql. 
1. Ensin asennettu Raspberrylle git ja npm.
2. Kloonattu repo githubista ohjeen mukaan.
3. Asennettu projektin riippuvuudet: npm install . 
4. Luotu uusi tietokanta mysql: booksDB ja lisätty sille uusi käyttäjä: books_user.
  USE booksDB;

  CREATE TABLE `books` (
    `id` int(11) NOT NULL,
    `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
    `author` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

  ALTER TABLE `books` ADD PRIMARY KEY (`id`);
  ALTER TABLE `books` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

  CREATE USER 'books_user'@'localhost'
  IDENTIFIED BY 'XXXX';

  GRANT ALL PRIVILEGES ON booksDB.* TO 'books_user'@'localhost';
  FLUSH PRIVILEGES; 

5. So after the database configuration, I tested the app with npm start. Program started and gave an ok in the console:
pi@raspberrypi:~/express_node/CRUD_teht/nodejs-crud-with-expressjs-mysql $ npm start
npm WARN npm npm does not support Node.js v10.24.0
npm WARN npm You should probably upgrade to a newer version of node as we
npm WARN npm can't make any promises that npm will work with this version.
npm WARN npm Supported releases of Node.js are the latest release of 4, 6, 7, 8, 9.
npm WARN npm You can find the latest version at https://nodejs.org/

> nodejs-crud@0.0.0 start /home/pi/express_node/CRUD_teht/nodejs-crud-with-expressjs-mysql
> node ./bin/www

Connected..!

6. Tested all functions and all operations seem to function ok:
GET / 200 55.959 ms - 443
GET /stylesheets/style.css 200 12.835 ms - 111
GET /favicon.ico 404 10.697 ms - 1343
GET /books 200 16.865 ms - 965
GET /books/add 200 5.133 ms - 1121
POST /books/add 302 73.594 ms - 56
GET /books 200 11.422 ms - 1875
GET /books/edit/1 200 8.341 ms - 1161
POST /books/update/1 302 20.088 ms - 56
GET /books 200 12.719 ms - 1879
GET /books/delete/1 302 13.755 ms - 56
GET /books 200 5.906 ms - 1060
