TEHTÄVÄNANTO:

Mallinnetaan kirjaston lainausjärjestelmää MySQL Workbenchin avulla. Suunnittele tarvittavat taulut ja niiden väliset yhteydet. 
Luo tauluihin tarvittava määrä kenttiä.

Ainakin seuraavia tietoja tarvitaan:

Kirjan tiedot
Tekijän tai tekijöiden tiedot
Lainaajan tiedot
Kuka on lainannut minkäkin kirjan ?
Onko kirja lainassa vai ei ?
Missä hyllyssä kirja sijaitsee (ei oteta tässä varastossa olevia kirjoja mukaan) ?
Montako kappaletta kirjoja on hyllyssä, montako lainassa ?
 Tietokannassa on ainakin seuraavat taulut:

Tekijä (siis esim. kirjailija tai kokoomateoksessa toimittaja tms)
Teos (esim Tuntematon sotilas)
Kirja (esim Tuntematonta sotilasta voi olla monta kappaletta, joista osa voi olla lainassa ja osa hyllyssä).
Lainaus (sisältää kaikkien lainaustapahtumien tiedot. Kuka on lainannut minkäkin kirjan ja milloin se pitää palauttaa).
Asiakas 
Muutamia asioita vielä pohdittavaksi:

Ovatko yhteydet taulujen välillä tyyppiä identifying vai non-identifying ?
Ovatko taulujen väliset yhteydet tyyppiä yhdestä yhteen, yhdestä moneen vai monesta moneen ?
Mitä lisämääreitä kentille kannattaa antaa ? Mikä kenttä voi olla NULL ? Onko joku kenttä UNIQUE ?
Tekijällä voi olla kirjastossa yksi tai useampiateoksia. Teoksella voi olla yksi tai useampi tekijä. 
Yksittäinen kirja voi olla joko lainassa jollain asiakkaalla tai hyllyssä. Teos ei voi olla olemassa ilman että sillä on joku tekijä. 
Toisaalta teos voi olla olemassa, vaikka kirjastossa ei olisi yhtään kyseistä kirjaa. Asiakkaan tiedot voivat olla tietokannassa, 
vaikka hän ei ole lainannut yhtään kirjaa. Kirja voi olla kirjastossa hyllyssä, vaikka sitä ei olisi lainattu yhtään kertaa.

Vastauksena tehtävään palauta PDF-muotoinen dokumentti, jossa on suunnittelemasi ER-diagrammi sekä sanallista pohdintaa, miten ja miksi
olet päätynyt juuri tällaiseen ratkaisuun.


PALAUTUS:

PDF-tiedosto: https://github.com/m1kkou/IN00CS86/blob/main/viikkotehtavat_3/tehtava_11/IN00CS86_teht11_mikko_jokipelto.pdf

Skripti:
-- MySQL Script generated by MySQL Workbench
-- Mon Sep 20 14:17:35 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Tekija`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tekija` (
  `ID` INT NOT NULL,
  `etunimi` VARCHAR(45) NULL,
  `sukunimi` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Teos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Teos` (
  `ID` INT NOT NULL,
  `nimi` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Kirja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Kirja` (
  `ID` INT NOT NULL,
  `TeosID` INT NOT NULL,
  `Hyllypaikka` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`, `TeosID`),
  INDEX `fk_Kirja_Teos1_idx` (`TeosID` ASC),
  CONSTRAINT `fk_Kirja_Teos1`
    FOREIGN KEY (`TeosID`)
    REFERENCES `mydb`.`Teos` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Asiakas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Asiakas` (
  `ID` INT NOT NULL,
  `etunimi` VARCHAR(45) NULL,
  `sukunimi` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Lainaus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Lainaus` (
  `ID` INT NOT NULL,
  `KirjaID` INT NOT NULL,
  `AsiakasID` INT NOT NULL,
  `OnPalautettu` TINYINT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `ID`
    FOREIGN KEY ()
    REFERENCES `mydb`.`Asiakas` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ID`
    FOREIGN KEY ()
    REFERENCES `mydb`.`Kirja` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TeoksenTekijat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TeoksenTekijat` (
  `TekijaID` INT NOT NULL,
  `TeosID` INT NOT NULL,
  INDEX `fk_TeoksenTekijat_Tekija1_idx` (`TekijaID` ASC),
  INDEX `fk_TeoksenTekijat_Teos1_idx` (`TeosID` ASC),
  CONSTRAINT `fk_TeoksenTekijat_Tekija1`
    FOREIGN KEY (`TekijaID`)
    REFERENCES `mydb`.`Tekija` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TeoksenTekijat_Teos1`
    FOREIGN KEY (`TeosID`)
    REFERENCES `mydb`.`Teos` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
