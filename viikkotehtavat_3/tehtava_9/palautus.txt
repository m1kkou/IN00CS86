TEHTÄVÄNANTO:
Tee oheisen ER-diagrammin mukainen arviointitietokanta. Syötä kuhunkin tauluun muutama tietue. Lähetä vastauksesi Github-linkkinä tai PDF-tiedostona, jossa on kuva ER-diagrammista sekä tulostukset tauluista kuten alla.

 Tässä vähän mallia, miltä lopputulos voisi näyttää:

 mysql> select * FROM Opintojakso;
+---------------+--------+---------+---------------------------+
| idOpintojakso | Koodi  | Laajuus | Nimi                      |
+---------------+--------+---------+---------------------------+
|             3 | T20041 |       3 | Tietokannat               |
|             4 | T20042 |       3 | Liike-elaman tapatietous |
|             5 | T20043 |       3 | Fysiikka 3                |
|             6 | T20044 |       6 | Elektroniikan perusteet   |
|             7 | T20045 |       5 | Kellarihumppa             |
|             8 | T20046 |       3 | Matematiikka 2            |
|             9 | T20047 |       3 | Ruotsin kieli             |
|            10 | T20048 |       3 | VHDL-kieli                |
+---------------+--------+---------+---------------------------+
8 rows in set (0.00 sec)

mysql> select * FROM Opiskelija;
+--------------+---------+----------+----------------+--------------+
| idOpiskelija | Etunimi | Sukunimi | Osoite         | Luokkatunnus |
+--------------+---------+----------+----------------+--------------+
|            1 | Aku     | Ankka    | Ankkalinna 313 | TTE3SNH      |
|            2 | Roope   | Ankka    | Ankkalinna 314 | TTE3SNH      |
|            3 | Iines   | Ankka    | Ankkalinna 315 | TTE4SNL      |
|            4 | Mikki   | Hiiri    | Ankkalinna 316 | TTE2SNO      |
|            5 | Hessu   | Hopo     | Ankkalinna 317 | TTE2SNO      |
+--------------+---------+----------+----------------+--------------+
5 rows in set (0.00 sec)


mysql> select etunimi,sukunimi,arvosana,paivamaara,nimi from Arviointi JOIN Opiskelija on Opiskelija.idOpiskelija = Arviointi.idOpiskelija JOIN Opintojakso on Opintojakso.idOpintojakso = Arviointi.idOpintojakso;


+---------+----------+----------+------------+---------------+
| etunimi | sukunimi | arvosana | paivamaara | nimi          |
+---------+----------+----------+------------+---------------+
| Aku     | Ankka    |        1 | 2014-09-05 | Tietokannat   |
| Aku     | Ankka    |        1 | 2014-09-05 | Fysiikka 3    |
| Aku     | Ankka    |        0 | 2014-09-05 | Ruotsin kieli |
| Roope   | Ankka    |        4 | 2014-09-05 | Tietokannat   |
| Roope   | Ankka    |        2 | 2014-09-05 | Fysiikka 3    |
| Iines   | Ankka    |        4 | 2014-09-05 | Tietokannat   |
| Iines   | Ankka    |        3 | 2014-09-05 | Fysiikka 3    |
| Mikki   | Hiiri    |        5 | 2014-09-05 | Tietokannat   |
| Mikki   | Hiiri    |        4 | 2014-09-05 | Fysiikka 3    |
| Hessu   | Hopo     |        5 | 2014-09-05 | Fysiikka 3    |
| Hessu   | Hopo     |        1 | 2014-09-05 | Tietokannat   |
+---------+----------+----------+------------+---------------+

PALAUTUS:
SQL workbench EER-diagrammista luotu scripti:

-- MySQL Script generated by MySQL Workbench
-- Sat Sep 18 17:14:53 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Opintojakso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Opintojakso` (
  `idOpintojakso` INT NOT NULL,
  `Koodi` VARCHAR(45) NULL,
  `Laajuus` VARCHAR(45) NULL,
  `Nimi` VARCHAR(45) NULL,
  PRIMARY KEY (`idOpintojakso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Opiskelija`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Opiskelija` (
  `idOpiskelija` INT NOT NULL,
  `Etunimi` VARCHAR(45) NULL,
  `Sukunimi` VARCHAR(45) NULL,
  `Osoite` VARCHAR(45) NULL,
  `Luokkatunnus` VARCHAR(45) NULL,
  PRIMARY KEY (`idOpiskelija`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Arviointi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Arviointi` (
  `idArviointi` INT NOT NULL,
  `etunimi` VARCHAR(45) NULL,
  `sukunimi` VARCHAR(45) NULL,
  `arvosana` VARCHAR(45) NULL,
  `paivamaata` DATETIME NULL,
  `nimi` VARCHAR(45) NULL,
  `idOpiskelija` INT NOT NULL,
  `idOpintojakso` INT NOT NULL,
  PRIMARY KEY (`idArviointi`),
  INDEX `idOpintojakso_idx` (`idOpintojakso` ASC),
  CONSTRAINT `idOpiskelija`
    FOREIGN KEY (`idOpiskelija`)
    REFERENCES `mydb`.`Opiskelija` (`idOpiskelija`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idOpintojakso`
    FOREIGN KEY (`idOpintojakso`)
    REFERENCES `mydb`.`Opintojakso` (`idOpintojakso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


 SELECT * FROM Opintojakso;
+---------------+--------+---------+--------------------+
| idOpintojakso | Koodi  | Laajuus | Nimi               |
+---------------+--------+---------+--------------------+
|             1 | T20041 | 3       | Tietokannat        |
|             2 | T20042 | 2       | Perunoiden istutus |
|             3 | T20043 | 5       | Villasukan pujotus |
+---------------+--------+---------+--------------------+
3 rows in set (0.001 sec)


SELECT * FROM Opiskelija;
+--------------+---------+----------+----------------+--------------+
| idOpiskelija | Etunimi | Sukunimi | Osoite         | Luokkatunnus |
+--------------+---------+----------+----------------+--------------+
|            1 | Aku     | Ankka    | Ankkalinna 313 | TVT19KMO     |
|            2 | Tupu    | Ankka    | Ankkalinna 314 | TVT19KMO     |
|            3 | Lupu    | Ankka    | Perämettä 3    | TVT19KMO     |
+--------------+---------+----------+----------------+--------------+
3 rows in set (0.001 sec)

SELECT 
    -> Opiskelija.Etunimi AS etunimi, 
    -> Opiskelija.Sukunimi AS sukunimi, 
    -> Arviointi.arvosana AS arvosana, 
    -> Arviointi.paivamaata AS paivamaara,
    -> Opintojakso.nimi AS nimi 
    -> FROM Arviointi 
    -> JOIN Opiskelija on Opiskelija.idOpiskelija = Arviointi.idOpiskelija 
    -> JOIN Opintojakso on Opintojakso.idOpintojakso = Arviointi.idOpintojakso;
+---------+----------+----------+---------------------+-------------+
| etunimi | sukunimi | arvosana | paivamaara          | nimi        |
+---------+----------+----------+---------------------+-------------+
| Aku     | Ankka    | 5        | 2021-09-09 00:00:00 | Tietokannat |
+---------+----------+----------+---------------------+-------------+



